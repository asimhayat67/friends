name: Publish

on:
  push:
    branches: [development]

jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      - name: Grant execute permissions to gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew testDebug

  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      - name: Assemble app debug APK
        run: ./gradlew assembleDebug

      - name: Upload app APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Assemble app instrumentation tests
        run: ./gradlew assembleDebugAndroidTest

      - name: Upload app test APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug-androidTest
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

  firebase:
    name: Run UI tests with Firebase Test Lab
    needs: apk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download app APK
        uses: actions/download-artifact@v2
        with:
          name: app-debug

      - name: Download app test APK
        uses: actions/download-artifact@v2
        with:
          name: app-debug-androidTest

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v3
        with:
          project_id: ${{ secrets.FRIENDS_PROJECT_ID }}
          service_account_key: ${{ secrets.FIREBASE_AUTH }}
          export_default_credentials: true

      - name: Run instrumentation tests in Firebase Test Lab
        run: gcloud firebase test android run --type instrumentation --app app-debug/app-debug.apk --test app-debug-androidTest/app-debug-androidTest.apk --device model=flame,version=30

distribute:
 name: Distribute app bundle to Play Store
 needs: firebase
 runs-on: ubuntu-latest
 steps:
   - name: Checkout code
     uses: actions/checkout@v2

   - name: Setup JDK 17
     uses: actions/setup-java@v2
     with:
       java-version: '17'

   # Add the "distribution" input here with a default value if needed
   - name: Some Action Requiring Distribution
     uses: some-org/some-action@v1
     with:
       distribution: ${{ github.event.inputs.distribution || 'default-value' }}  # Use 'default-value' or your desired default

   - name: Version bump
     uses: chkfung/android-version-actions@v1.1
     with:
       gradlePath: app/build.gradle
       versionCode: ${{ github.run_number }}

   - name: Assemble Release Bundle
     run: ./gradlew bundleRelease

   - name: Sign Release
     uses: r0adkll/sign-android-release@v1
     with:
       releaseDirectory: app/build/outputs/bundle/release
       signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE }}
       alias: ${{ secrets.FRIENDS_KEY_ALIAS }}
       keyStorePassword: ${{ secrets.FRIENDS_KEY_PASSWORD }}
       keyPassword: ${{ secrets.KEYSTORE_PASSWORD }}

   - name: Setup authorization with Google Play Store
     run: echo '${{ secrets.GOOGLE_SERVICES_API }}' > service_account.json

   - name: Deploy to Internal
     uses: r0adkll/upload-google-play@v1
     with:
       serviceAccountJson: service_account.json
       packageName: com.cicd.friends
       releaseFiles: app/build/outputs/bundle/release/app-release.aab
       track: internal
       whatsNewDirectory: whatsNewDirectory/
